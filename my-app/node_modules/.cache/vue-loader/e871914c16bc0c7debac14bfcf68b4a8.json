{"remainingRequest":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/vuetify-loader/lib/loader.js!/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/src/components/edit/ImageOrganizer.vue?vue&type=template&id=4966970e&scoped=true&","dependencies":[{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/src/components/edit/ImageOrganizer.vue","mtime":1603687285978},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIHJlbmRlciA9IGZ1bmN0aW9uKCkgewogIHZhciBfdm0gPSB0aGlzCiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50CiAgdmFyIF9jID0gX3ZtLl9zZWxmLl9jIHx8IF9oCiAgcmV0dXJuIF9jKAogICAgInYtY29udGFpbmVyIiwKICAgIHsgYXR0cnM6IHsgZmx1aWQ6ICIiIH0gfSwKICAgIFsKICAgICAgX2MoCiAgICAgICAgInYtcm93IiwKICAgICAgICB7IHN0YXRpY0NsYXNzOiAibXktNSBteC0xIiwgYXR0cnM6IHsganVzdGlmeTogInN0YXJ0IiB9IH0sCiAgICAgICAgWwogICAgICAgICAgX2MoImgyIiwgW192bS5fdigiR2FsbGVyeSAoIiArIF92bS5fcyhfdm0udG90YWxJbWFnZXMpICsgIikiKV0pLAogICAgICAgICAgX2MoInYtc3BhY2VyIiksCiAgICAgICAgICBfYygKICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGF0dHJzOiB7IHRleHQ6ICIiLCBzbWFsbDogIiIgfSwKICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICBfdm0uZmlsdGVyID0gIiIKICAgICAgICAgICAgICAgICAgX3ZtLmVkaXRNb2RlID0gIV92bS5lZGl0TW9kZQogICAgICAgICAgICAgICAgICBfdm0uY3JlYXRlTW9kZSA9IGZhbHNlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoInYtaWNvbiIsIHsgc3RhdGljQ2xhc3M6ICJtci0yIiwgYXR0cnM6IHsgc21hbGw6ICIiIH0gfSwgWwogICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAiICIgKwogICAgICAgICAgICAgICAgICAgIF92bS5fcyhfdm0uZWRpdE1vZGUgPyAibWRpLWNsb3NlIiA6ICJtZGktcGVuY2lsLW91dGxpbmUiKSArCiAgICAgICAgICAgICAgICAgICAgIiAiCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX3ZtLl92KCIgRWRpdCBDb2xsZWN0aW9ucyAiKQogICAgICAgICAgICBdLAogICAgICAgICAgICAxCiAgICAgICAgICApLAogICAgICAgICAgX2MoCiAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBhdHRyczogeyB0ZXh0OiAiIiwgc21hbGw6ICIiIH0sCiAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgX3ZtLmZpbHRlciA9ICIiCiAgICAgICAgICAgICAgICAgIF92bS5jcmVhdGVNb2RlID0gIV92bS5jcmVhdGVNb2RlCiAgICAgICAgICAgICAgICAgIF92bS5lZGl0TW9kZSA9IGZhbHNlCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoInYtaWNvbiIsIHsgc3RhdGljQ2xhc3M6ICJtci0yIiwgYXR0cnM6IHsgc21hbGw6ICIiIH0gfSwgWwogICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAiICIgKyBfdm0uX3MoX3ZtLmNyZWF0ZU1vZGUgPyAibWRpLWNsb3NlIiA6ICJtZGktcGx1cyIpICsgIiAiCiAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX3ZtLl92KCIgQWRkIENvbGxlY3Rpb24gIikKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApLAogICAgICBfYygKICAgICAgICAidi1yb3ciLAogICAgICAgIHsKICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICByYXdOYW1lOiAidi1zaG93IiwKICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmNyZWF0ZU1vZGUsCiAgICAgICAgICAgICAgZXhwcmVzc2lvbjogImNyZWF0ZU1vZGUiCiAgICAgICAgICAgIH0KICAgICAgICAgIF0sCiAgICAgICAgICBzdGF0aWNDbGFzczogIm1hLTEgZmx1aWQiLAogICAgICAgICAgYXR0cnM6IHsganVzdGlmeTogImVuZCIgfQogICAgICAgIH0sCiAgICAgICAgWwogICAgICAgICAgX2MoCiAgICAgICAgICAgICJ2LWNhcmQiLAogICAgICAgICAgICB7IGF0dHJzOiB7IGZsYXQ6ICIiLCB3aWR0aDogIjUwJSIgfSB9LAogICAgICAgICAgICBbCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAidi1jYXJkLXRpdGxlIiwKICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgX2MoInYtdGV4dC1maWVsZCIsIHsKICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm14LTIiLAogICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGxhYmVsOiAiTmV3IGNvbGxlY3Rpb24gbmFtZSIgfSwKICAgICAgICAgICAgICAgICAgICBtb2RlbDogewogICAgICAgICAgICAgICAgICAgICAgdmFsdWU6IF92bS5uZXdDb2xsZWN0aW9uLAogICAgICAgICAgICAgICAgICAgICAgY2FsbGJhY2s6IGZ1bmN0aW9uKCQkdikgewogICAgICAgICAgICAgICAgICAgICAgICBfdm0ubmV3Q29sbGVjdGlvbiA9ICQkdgogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIGV4cHJlc3Npb246ICJuZXdDb2xsZWN0aW9uIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJteC0yIiwKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIG91dGxpbmVkOiAiIiwKICAgICAgICAgICAgICAgICAgICAgICAgc21hbGw6ICIiLAogICAgICAgICAgICAgICAgICAgICAgICBjb2xvcjogInN1Y2Nlc3MiLAogICAgICAgICAgICAgICAgICAgICAgICBkaXNhYmxlZDogX3ZtLm5ld0NvbGxlY3Rpb24gPT09ICIiCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0uYWRkVGFnKCkKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgW192bS5fdigiIENyZWF0ZSAiKV0KICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm1sLTUiLAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsgaWNvbjogIiIsIHNtYWxsOiAiIiB9LAogICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5uZXdDb2xsZWN0aW9uID0gIiIKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uY3JlYXRlTW9kZSA9IGZhbHNlCiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIFtfYygidi1pY29uIiwgW192bS5fdigibWRpLWNsb3NlLWNpcmNsZS1vdXRsaW5lIildKV0sCiAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICkKICAgICAgICAgICAgXSwKICAgICAgICAgICAgMQogICAgICAgICAgKQogICAgICAgIF0sCiAgICAgICAgMQogICAgICApLAogICAgICBfYygKICAgICAgICAidi1yb3ciLAogICAgICAgIHsKICAgICAgICAgIGRpcmVjdGl2ZXM6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIG5hbWU6ICJzaG93IiwKICAgICAgICAgICAgICByYXdOYW1lOiAidi1zaG93IiwKICAgICAgICAgICAgICB2YWx1ZTogX3ZtLmVkaXRNb2RlLAogICAgICAgICAgICAgIGV4cHJlc3Npb246ICJlZGl0TW9kZSIKICAgICAgICAgICAgfQogICAgICAgICAgXSwKICAgICAgICAgIHN0YXRpY0NsYXNzOiAibWEtMSBmbHVpZCIsCiAgICAgICAgICBhdHRyczogeyBqdXN0aWZ5OiAiZW5kIiB9CiAgICAgICAgfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgInYtY2FyZCIsCiAgICAgICAgICAgIHsgYXR0cnM6IHsgZmxhdDogIiIsIHdpZHRoOiAiNjAlIiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJ2LWNhcmQtdGl0bGUiLAogICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICBfYygidi1zZWxlY3QiLCB7CiAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJteC0yIiwKICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgbGFiZWw6ICJTZWxlY3QgYSBjb2xsZWN0aW9uIiwKICAgICAgICAgICAgICAgICAgICAgICJuby1kYXRhLXRleHQiOiAiTm8gY29sbGVjdGlvbnMgeWV0IC0gR28gbWFrZSBvbmUhIiwKICAgICAgICAgICAgICAgICAgICAgIG1lc3NhZ2VzOgogICAgICAgICAgICAgICAgICAgICAgICAiQ29sbGVjdGlvbiAiICsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmFjdGl2ZUNvbGxlY3Rpb24ubGFiZWwgKwogICAgICAgICAgICAgICAgICAgICAgICAiIGhhcyAiICsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLnRvdGFsSW1hZ2VzQnlUYWcoX3ZtLmFjdGl2ZUNvbGxlY3Rpb24pICsKICAgICAgICAgICAgICAgICAgICAgICAgIiBpbWFnZXMuIiwKICAgICAgICAgICAgICAgICAgICAgIGl0ZW1zOiBfdm0udGFncywKICAgICAgICAgICAgICAgICAgICAgICJpdGVtLXRleHQiOiAibGFiZWwiLAogICAgICAgICAgICAgICAgICAgICAgIml0ZW0tdmFsdWUiOiAiaWQiLAogICAgICAgICAgICAgICAgICAgICAgInJldHVybi1vYmplY3QiOiAiIgogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgbW9kZWw6IHsKICAgICAgICAgICAgICAgICAgICAgIHZhbHVlOiBfdm0uYWN0aXZlQ29sbGVjdGlvbiwKICAgICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrOiBmdW5jdGlvbigkJHYpIHsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmFjdGl2ZUNvbGxlY3Rpb24gPSAkJHYKICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICBleHByZXNzaW9uOiAiYWN0aXZlQ29sbGVjdGlvbiIKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0pLAogICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAidi1idG4iLAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOiAibXgtMiIsCiAgICAgICAgICAgICAgICAgICAgICBhdHRyczogewogICAgICAgICAgICAgICAgICAgICAgICBvdXRsaW5lZDogIiIsCiAgICAgICAgICAgICAgICAgICAgICAgIHNtYWxsOiAiIiwKICAgICAgICAgICAgICAgICAgICAgICAgZGlzYWJsZWQ6IF92bS5pc0VtcHR5KF92bS5hY3RpdmVDb2xsZWN0aW9uKSwKICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICJzdWNjZXNzIgogICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0udXBkYXRlQ29sbGVjdGlvbigpCiAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLmVkaXRNb2RlID0gZmFsc2UKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgW192bS5fdigiIFNhdmUgQ2hhbmdlcyAiKV0KICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm14LTIiLAogICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgb3V0bGluZWQ6ICIiLAogICAgICAgICAgICAgICAgICAgICAgICBzbWFsbDogIiIsCiAgICAgICAgICAgICAgICAgICAgICAgIGRpc2FibGVkOiBfdm0uaXNFbXB0eShfdm0uYWN0aXZlQ29sbGVjdGlvbiksCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbG9yOiAiZXJyb3IiCiAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgb246IHsKICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICRldmVudC5wcmV2ZW50RGVmYXVsdCgpCiAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF92bS5yZW1vdmVUYWcoKQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIgRGVsZXRlIENvbGxlY3Rpb24gIildCiAgICAgICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJ2LWJ0biIsCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgc3RhdGljQ2xhc3M6ICJtbC01IiwKICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7IGljb246ICIiLCBzbWFsbDogIiIgfSwKICAgICAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBfdm0uZWRpdE1vZGUgPSBmYWxzZQogICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5hY3RpdmVDb2xsZWN0aW9uID0ge30KICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoInYtaWNvbiIsIHsgYXR0cnM6IHsgbWVkaXVtOiAiIiB9IH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl92KCJtZGktY2xvc2UtY2lyY2xlLW91dGxpbmUiKQogICAgICAgICAgICAgICAgICAgICAgXSkKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgInYtcm93IiwKICAgICAgICB7IHN0YXRpY0NsYXNzOiAibWEtMSIgfSwKICAgICAgICBbCiAgICAgICAgICBfYygKICAgICAgICAgICAgInYtaXRlbS1ncm91cCIsCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygidi1idG4iLCB7IGF0dHJzOiB7IGRpc2FibGVkOiAiIiwgdGV4dDogIiIgfSB9LCBbCiAgICAgICAgICAgICAgICBfdm0uX3YoImZpbHRlciBieSIpCiAgICAgICAgICAgICAgXSksCiAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAidi1idG4iLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBhdHRyczogeyB0ZXh0OiAiIiwgY29sb3I6IF92bS5maWx0ZXIgPT0gIiIgPyAiI0ExNTk5NSIgOiAiIiB9LAogICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgIGNsaWNrOiBmdW5jdGlvbigkZXZlbnQpIHsKICAgICAgICAgICAgICAgICAgICAgIF92bS5maWx0ZXIgPSAiIgogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFtfdm0uX3YoIiBhbGwgKCIgKyBfdm0uX3MoX3ZtLnRvdGFsSW1hZ2VzKSArICIpICIpXQogICAgICAgICAgICAgICksCiAgICAgICAgICAgICAgX3ZtLl9sKF92bS50YWdzLCBmdW5jdGlvbih0YWcpIHsKICAgICAgICAgICAgICAgIHJldHVybiBfYygKICAgICAgICAgICAgICAgICAgInYtYnRuIiwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGtleTogImZpbHRlcmJ5OiIgKyB0YWcubGFiZWwsCiAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgIHRleHQ6ICIiLAogICAgICAgICAgICAgICAgICAgICAgY29sb3I6IF92bS5maWx0ZXIgPT09IHRhZy5sYWJlbCA/ICIjQTE1OTk1IiA6ICIiCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICBfdm0uZmlsdGVyID0gdGFnLmxhYmVsCiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgX3ZtLl92KAogICAgICAgICAgICAgICAgICAgICAgIiAiICsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKHRhZy5sYWJlbCkgKwogICAgICAgICAgICAgICAgICAgICAgICAiICgiICsKICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9zKF92bS50b3RhbEltYWdlc0J5VGFnKHRhZykpICsKICAgICAgICAgICAgICAgICAgICAgICAgIikgIgogICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDIKICAgICAgICAgICkKICAgICAgICBdLAogICAgICAgIDEKICAgICAgKSwKICAgICAgX2MoCiAgICAgICAgInYtcm93IiwKICAgICAgICBfdm0uX2woX3ZtLmZpbHRlcmVkSW1hZ2VzLCBmdW5jdGlvbihpbWFnZSwgaSkgewogICAgICAgICAgcmV0dXJuIF9jKAogICAgICAgICAgICAidi1jb2wiLAogICAgICAgICAgICB7IGtleTogaSwgc3RhdGljQ2xhc3M6ICJkLWZsZXggY2hpbGQtZmxleCIsIGF0dHJzOiB7IGNvbHM6ICI0IiB9IH0sCiAgICAgICAgICAgIFsKICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICJ2LWNhcmQiLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogIm14LWF1dG8iLAogICAgICAgICAgICAgICAgICBhdHRyczogeyBvdXRsaW5lZDogIiIsIGZsYXQ6ICIiIH0sCiAgICAgICAgICAgICAgICAgIG9uOiB7CiAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgJGV2ZW50LnByZXZlbnREZWZhdWx0KCkKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBfdm0ubWFrZUFjdGl2ZShpLCBfdm0uYWN0aXZlQ29sbGVjdGlvbikKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICJ2LXJvdyIsCiAgICAgICAgICAgICAgICAgICAgeyBhdHRyczogeyBqdXN0aWZ5OiAiY2VudGVyIiB9IH0sCiAgICAgICAgICAgICAgICAgICAgWwogICAgICAgICAgICAgICAgICAgICAgX2MoCiAgICAgICAgICAgICAgICAgICAgICAgICJ2LW92ZXJsYXkiLAogICAgICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgYXR0cnM6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFic29sdXRlOiBfdm0uZWRpdE1vZGUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YWx1ZTogaW1hZ2UuY29sbGVjdGlvbnMuaW5jbHVkZXMoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF92bS5hY3RpdmVDb2xsZWN0aW9uCiAgICAgICAgICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgICBvbjogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xpY2s6IGZ1bmN0aW9uKCRldmVudCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkZXZlbnQucHJldmVudERlZmF1bHQoKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX3ZtLm1ha2VBY3RpdmUoaSwgX3ZtLmFjdGl2ZUNvbGxlY3Rpb24pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgICAgICBbCiAgICAgICAgICAgICAgICAgICAgICAgICAgaW1hZ2UuY29sbGVjdGlvbnMuaW5jbHVkZXMoX3ZtLmFjdGl2ZUNvbGxlY3Rpb24pCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA/IF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJ2LWljb24iLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsgYXR0cnM6IHsgbGFyZ2U6ICIiLCBjb2xvcjogIndoaXRlIiB9IH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgW192bS5fdigiIG1kaS1jaGVjay1jaXJjbGUgIildCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDogX3ZtLl9lKCkKICAgICAgICAgICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgICAgICAgICAgMQogICAgICAgICAgICAgICAgICAgICAgKSwKICAgICAgICAgICAgICAgICAgICAgIF9jKCJ2LWNhcmQtdGl0bGUiLCBbX3ZtLl92KF92bS5fcyhpbWFnZS50aXRsZS5TKSldKSwKICAgICAgICAgICAgICAgICAgICAgIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAiZGl2IiwKICAgICAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAgIHN0YXRpY0NsYXNzOgogICAgICAgICAgICAgICAgICAgICAgICAgICAgImQtZmxleCBmbGV4LW5vLXdyYXAganVzdGlmeS1zdGFydCBteC01IG1iLTUiCiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIFsKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygidi1pbWciLCB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdGF0aWNDbGFzczogInNlbGVjdGlvbkltYWdlIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGF0dHJzOiB7ICJtYXgtd2lkdGgiOiAiMjUwcHgiLCBzcmM6IGltYWdlLnVybC5TIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgICBfYygidi1jYXJkLXN1YnRpdGxlIiwgeyBzdGF0aWNDbGFzczogIm1sLTIiIH0sIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIF9jKCJoNCIsIFtfdm0uX3YoIkNvbGxlY3Rpb25zOiIpXSksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBfYygKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgInVsIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgX3ZtLl9sKGltYWdlLmNvbGxlY3Rpb25zLCBmdW5jdGlvbihjb2xsZWN0aW9uKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIF9jKAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgImxpIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHsga2V5OiBjb2xsZWN0aW9uICsgIi1pbWFnZSIgKyBpIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbX3ZtLl92KCIgIiArIF92bS5fcyhjb2xsZWN0aW9uKSArICIgIildCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KSwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgMAogICAgICAgICAgICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgICAgICAgICAgIF0pCiAgICAgICAgICAgICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAgIDEKICAgICAgICAgICAgICApCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIDEKICAgICAgICAgICkKICAgICAgICB9KSwKICAgICAgICAxCiAgICAgICkKICAgIF0sCiAgICAxCiAgKQp9CnZhciBzdGF0aWNSZW5kZXJGbnMgPSBbXQpyZW5kZXIuX3dpdGhTdHJpcHBlZCA9IHRydWUKCmV4cG9ydCB7IHJlbmRlciwgc3RhdGljUmVuZGVyRm5zIH0="}]}