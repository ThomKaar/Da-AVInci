{"remainingRequest":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/src/components/ImageUploader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/src/components/ImageUploader.vue","mtime":1577089958929},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIGltcG9ydCB2dWUyRHJvcHpvbmUgZnJvbSAndnVlMi1kcm9wem9uZScKLy8gaW1wb3J0ICd2dWUyLWRyb3B6b25lL2Rpc3QvdnVlMkRyb3B6b25lLm1pbi5jc3MnCmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IEZpbGVVcGxvYWQgZnJvbSAndi1maWxlLXVwbG9hZCc7CmltcG9ydCB2dWUyRHJvcHpvbmUgZnJvbSAndnVlMi1kcm9wem9uZSc7CmltcG9ydCAndnVlMi1kcm9wem9uZS9kaXN0L3Z1ZTJEcm9wem9uZS5taW4uY3NzJwppbXBvcnQgeyBJdGVtUHJvdmlkZXIgfSBmcm9tICcuLi9wcm92aWRlcnMnOyAKVnVlLnVzZShGaWxlVXBsb2FkKTsKVnVlLnVzZSh2dWUyRHJvcHpvbmUpOwp2YXIgQVdTID0gcmVxdWlyZSgnYXdzLXNkaycpOwpleHBvcnQgZGVmYXVsdCB7CiAgICBjb21wb25lbnRzOiB7CiAgICB9LAogICAgZGF0YTogZnVuY3Rpb24oKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgIHVybDogJ2h0dHA6Ly9sb2NhbGhvc3Q6MzAwMC9pbWFnZS91cGxvYWQnLAogICAgICAgICAgaGVhZGVyczoge30sCiAgICAgICAgICBmaWxlc1VwbG9hZGVkOiBbXSwKICAgICAgICAgIHRpdGxlOiAiIiwKICAgICAgICAgIGZpbGVFeHRlbnNpb246ICIiLAogICAgICAgIH07CiAgICB9LAogICAgbWV0aG9kczogewogICAgICB0aHVtYlVybDogZnVuY3Rpb24oZmlsZSkgewogICAgICAgIHJldHVybiBmaWxlLm15VGh1bWJVcmxQcm9wZXJ0eQogICAgICB9LAogICAgICBvbkZpbGVVcGRhdGU6IGZ1bmN0aW9uKGZpbGUpIHsKICAgICAgICB0aGlzLiRkYXRhLmZpbGVzVXBsb2FkZWQgPSBmaWxlLnRhcmdldC5maWxlc1swXTsKICAgICAgICB0aGlzLiRkYXRhLnRpdGxlID0gZmlsZS50YXJnZXQuZmlsZXNbMF0ubmFtZS5zcGxpdCgnLicpWzBdOwogICAgICAgIHRoaXMuJGRhdGEuZmlsZUV4dGVuc2lvbiA9IGZpbGUudGFyZ2V0LmZpbGVzWzBdLm5hbWUuc3BsaXQoJy4nKVsxXTsKICAgICAgICAKICAgICAgfSwKICAgICAgdXBsb2FkRmlsZXM6IGZ1bmN0aW9uKCkgewogICAgICAgIC8vIGNvbnN0IGltYWdlUHJvdmlkZXIgPSBuZXcgSW1hZ2VQcm92aWRlcigpOwogICAgICAgIGxldCBmaWxlID0gdGhpcy4kZGF0YS5maWxlc1VwbG9hZGVkOwogICAgICAgIGxldCB0aXRsZSA9IHRoaXMuJGRhdGEudGl0bGU7CiAgICAgICAgbGV0IGV4dGVuc2lvbiA9IHRoaXMuJGRhdGEuZmlsZUV4dGVuc2lvbjsKICAgICAgICBBV1MuY29uZmlnLnVwZGF0ZSh7CiAgICAgICAgICByZWdpb246ICJ1cy1lYXN0LTEiLAogICAgICAgICAgYWNjZXNzS2V5SWQ6ICJBS0lBVVJPVlNZMkNVQlZRRE1DNSIsCiAgICAgICAgICBzZWNyZXRBY2Nlc3NLZXk6ICJTbTdDUWl0c3U4Ym5DRTdRWXMzeFNNNm5vODNOVzNKdlNXKzRmaU9mIiwKICAgICAgICB9KTsKICAgICAgICB2YXIgdXBsb2FkID0gbmV3IEFXUy5TMy5NYW5hZ2VkVXBsb2FkKHsKICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICBCdWNrZXQ6ICdkYS12aW5jaS1pbWFnZS1idWNrZXQnLAogICAgICAgICAgICBLZXk6ICJzdGlsbExpZmUvIiArIHRpdGxlICsgIi4iICsgZXh0ZW5zaW9uLAogICAgICAgICAgICBCb2R5OiBmaWxlLAogICAgICAgICAgICBBQ0w6ICJwdWJsaWMtcmVhZCIKICAgICAgICAgIH0sCiAgICAgICAgfSk7CiAgICAgICAgdmFyIHByb21pc2UgPSB1cGxvYWQucHJvbWlzZSgpOwogICAgICAgIHByb21pc2UudGhlbigKICAgICAgICAgIGZ1bmN0aW9uKHJlc3BvbnNlKSB7CiAgICAgICAgICAgIGxldCBpdGVtUHJvdmlkZXIgPSBuZXcgSXRlbVByb3ZpZGVyKCk7CiAgICAgICAgICAgIGl0ZW1Qcm92aWRlci5jcmVhdGVJdGVtKHsKICAgICAgICAgICAgICB0aXRsZTogdGl0bGUsCiAgICAgICAgICAgICAgdXJsOiByZXNwb25zZS5Mb2NhdGlvbiwKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9LAogICAgICAgICAgZnVuY3Rpb24oZXJyKSB7CiAgICAgICAgICAgIHJldHVybiBhbGVydCgiVGhlcmUgd2FzIGFuIGVycm9yIHVwbG9hZGluZyB5b3VyIHBob3RvOiAiLCBlcnIubWVzc2FnZSk7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUKICAgICAgICAgIH0KICAgICAgICApOyAgIAogICAgICB9LAogICAgICBtb3VudGVkOiBmdW5jdGlvbigpIHsKICAgICAgICAKICAgICAgfQogICAgfQp9Cg=="},{"version":3,"sources":["ImageUploader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"ImageUploader.vue","sourceRoot":"src/components","sourcesContent":["<template>\n     <v-card raised\n        class=\"mx-auto\"\n        max-width=\"344\"\n        outlined>\n\n    <v-list-item three-line>\n      <v-list-item-content>\n        <v-list-item-title class=\"headline mb-1 title\">Image Uploader</v-list-item-title>\n        <v-text-field\n            v-model=\"title\"\n            label=\"Title\"\n          ></v-text-field>\n        \n      </v-list-item-content>\n      \n    </v-list-item>\n    <v-list-item>\n      <v-list-item-content>\n        <form class=\"form\">\n          <input type=\"file\" @change=\"onFileUpdate\">\n        </form>\n      </v-list-item-content>\n    </v-list-item>\n    \n    <v-list-item>\n      <v-list-item-content>\n        <v-card-actions>\n          <v-btn v-on:click=\"uploadFiles\" class=\"button\">Upload</v-btn>\n        </v-card-actions>\n      </v-list-item-content>\n    </v-list-item>\n    \n  </v-card>\n</template>\n<script>\n// import vue2Dropzone from 'vue2-dropzone'\n// import 'vue2-dropzone/dist/vue2Dropzone.min.css'\nimport Vue from 'vue';\nimport FileUpload from 'v-file-upload';\nimport vue2Dropzone from 'vue2-dropzone';\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css'\nimport { ItemProvider } from '../providers'; \nVue.use(FileUpload);\nVue.use(vue2Dropzone);\nvar AWS = require('aws-sdk');\nexport default {\n    components: {\n    },\n    data: function() {\n        return {\n          url: 'http://localhost:3000/image/upload',\n          headers: {},\n          filesUploaded: [],\n          title: \"\",\n          fileExtension: \"\",\n        };\n    },\n    methods: {\n      thumbUrl: function(file) {\n        return file.myThumbUrlProperty\n      },\n      onFileUpdate: function(file) {\n        this.$data.filesUploaded = file.target.files[0];\n        this.$data.title = file.target.files[0].name.split('.')[0];\n        this.$data.fileExtension = file.target.files[0].name.split('.')[1];\n        \n      },\n      uploadFiles: function() {\n        // const imageProvider = new ImageProvider();\n        let file = this.$data.filesUploaded;\n        let title = this.$data.title;\n        let extension = this.$data.fileExtension;\n        AWS.config.update({\n          region: \"us-east-1\",\n          accessKeyId: \"AKIAUROVSY2CUBVQDMC5\",\n          secretAccessKey: \"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\",\n        });\n        var upload = new AWS.S3.ManagedUpload({\n          params: {\n            Bucket: 'da-vinci-image-bucket',\n            Key: \"stillLife/\" + title + \".\" + extension,\n            Body: file,\n            ACL: \"public-read\"\n          },\n        });\n        var promise = upload.promise();\n        promise.then(\n          function(response) {\n            let itemProvider = new ItemProvider();\n            itemProvider.createItem({\n              title: title,\n              url: response.Location,\n            });\n          },\n          function(err) {\n            return alert(\"There was an error uploading your photo: \", err.message); // eslint-disable-line\n          }\n        );   \n      },\n      mounted: function() {\n        \n      }\n    }\n}\n</script>\n<style scoped>\n.title {\n  text-align: center;\n}\n\n.button {\n  text-align: center;\n  margin-left: 35%;\n}\n\n.form {\n  text-align: center;\n  margin-left: 15%;\n}\n</style>\n"]}]}