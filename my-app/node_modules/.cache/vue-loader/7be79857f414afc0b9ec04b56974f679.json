{"remainingRequest":"/mnt/c/users/kenak/documents/1calpoly/art/Da-AVInci/my-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/users/kenak/documents/1calpoly/art/Da-AVInci/my-app/src/components/edit/ImageOrganizer.vue?vue&type=style&index=0&id=4966970e&scoped=true&lang=css&","dependencies":[{"path":"/mnt/c/users/kenak/documents/1calpoly/art/Da-AVInci/my-app/src/components/edit/ImageOrganizer.vue","mtime":1603323258982},{"path":"/mnt/c/users/kenak/documents/1calpoly/art/Da-AVInci/my-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1calpoly/art/Da-AVInci/my-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1calpoly/art/Da-AVInci/my-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1calpoly/art/Da-AVInci/my-app/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/mnt/c/users/kenak/documents/1calpoly/art/Da-AVInci/my-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1calpoly/art/Da-AVInci/my-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoudGl0bGUgewogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoucmVtb3ZlVGFnIHsKICAgIG1hcmdpbi1sZWZ0OiA1JTsKfQouYWRkVGFnIHsKICAgIG1hcmdpbi10b3A6IGF1dG87CiAgICBtYXJnaW4tYm90dG9tOiBhdXRvOwp9Ci5zZWxlY3RDaGVjayB7CiAgICB3aWR0aDogMTAwJTsKICAgIGNvbG9yOiBibHVlOwp9Ci5jb25maXJtQnV0dG9uIHsKICAgIHdpZHRoOiAxMCU7CiAgICBtYXJnaW46IGF1dG87CiAgICB0ZXh0LWFsaWduOiBhdXRvOwp9CgoucGljdHVyZUNhcmQgewogIG1hcmdpbjogYXV0bzsKICBoZWlnaHQ6IDgwJTsKICB3aWR0aDogMjAlOwp9Cgouc2VsZWN0aW9uSW1hZ2UgewogIGRpc3BsYXk6IGZsZXg7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBoZWlnaHQ6IGF1dG87CiAgd2lkdGg6IDEwMCU7Cn0KCmg1IHsKICB0ZXh0LWFsaWduOiBjZW50ZXI7Cn0KCi50ZXh0RmllbGQgewogIGhlaWdodDogMTAlOwp9Cg=="},{"version":3,"sources":["ImageOrganizer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"ImageOrganizer.vue","sourceRoot":"src/components/edit","sourcesContent":["\n<template>\n    <!-- eslint-disable -->\n    <div> \n    \n    <!--header-->\n    <v-row \n    class=\"my-5 mx-1\"\n    justify=\"start\">\n      <h2>Gallery ({{totalImages}})</h2>\n      <v-btn \n      icon\n      @click=\"editMode = !editMode\"\n      >\n        <v-icon>\n          {{ editMode ? 'mdi-close-circle-outline' :'mdi-pencil-outline'}}\n        </v-icon>\n      </v-btn>\n    </v-row>\n\n    <!--filters-->\n    <v-row\n    v-show=\"!editMode\"\n    class=\"ma-1\">\n      <v-item-group>\n        <v-btn disabled text>filter by</v-btn>\n        <v-btn \n        text \n        :color=\"filter == '' ? '#A15995' : ''\"\n        @click=\"filter = ''\"> \n          all ({{totalImages}})\n        </v-btn>\n        <v-btn \n        v-for=\"tag in tags\" \n        :key=\"'filterby:' +tag\"\n        text\n        :color=\"filter === tag ? '#A15995' : ''\"\n        @click=\"filter = tag\"\n        >\n          {{tag}} ({{totalImagesByTag(tag)}})\n        </v-btn>\n      </v-item-group>\n    </v-row>\n\n    <!--edit-->\n    <v-row \n    v-show=\"editMode\"\n    class=\"ma-1\">\n      <v-chip-group\n      column\n      active-class=\"primary--text\"\n      >\n        <v-chip v-for=\"(tag,i) in tags\" :key=\"tag\" v-on:click=\"changeActiveCollection(tag)\">\n          {{ tag }}\n          <v-icon class=\"removeTag\" v-on:click.prevent=\"removeTag(i)\" x-small>mdi-close-circle-outline</v-icon>\n        </v-chip>\n      </v-chip-group>\n\n      <v-btn class=\"confirmButton\" v-on:click=\"updateCollections()\">\n        Confirm\n    </v-btn> \n    </v-row>\n\n    <!--image gallery -->\n    <v-row>\n      <v-col \n      class=\"d-flex child-flex\"\n      cols=\"4\"\n      v-for=\"(image, i) in filteredImages\"\n      :key=\"i\">\n        <v-card \n          class=\"mx-auto\">  \n          <v-card-title>{{image.title.S}}</v-card-title>      \n          <div class=\"d-flex flex-no-wrap justify-start mx-5 mb-5\">\n    \n            <v-img\n            max-width=\"250px\"\n            class=\"selectionImage\"\n            :src=image.url.S\n            @click.prevent=\"makeActive(i, activeCollection)\"\n            >\n                <v-icon v-if=\"image.collections.includes(activeCollection)\" medium class=\"selectCheck\">mdi-check-circle</v-icon>\n            </v-img>\n             \n            <v-card-subtitle class=\"ml-2\"> \n              <h4>Collections:</h4>\n              <ul>\n                <li\n                 v-for=\"collection in image.collections\"\n                 :key=\"collection +'-image' + i \">\n                 {{collection}}\n                 </li>\n              </ul>\n            </v-card-subtitle>\n          </div>\n        </v-card>\n      </v-col>\n    </v-row>\n    </div>\n</template>\n\n<script>\nimport { ItemProvider } from '../../providers';\nimport { ImageProvider } from '../../providers'; \nexport default {\n    components: {\n    },\n    data: function() {\n        return {\n            editMode: false,\n            tags: ['default'],\n            displayImages: [],\n            activeCollection: 'default',\n            rules: {\n              required: value => !!value || 'Required',\n            },\n            newCategory: '',\n            dialog: false,\n            filter: ''\n        };\n    },\n    computed: {\n      totalImages: function() {\n        return this.$data.displayImages.length\n      },\n      totalImagesByTag: function() {\n        return tag => this.$data.displayImages.filter(el => el.collections.includes(tag)).length\n      },\n      filteredImages: function() {\n        /*eslint-disable no-console */\n        console.log(this.$data.filter)\n        return this.$data.filter === '' ? this.$data.displayImages : \n          this.$data.displayImages.filter(el => el.collections.includes(this.$data.filter))\n      }\n    },\n    methods: {\n        addTag: function(newCategory) {\n            if (newCategory !== '') {\n              // Add it to the UI\n              this.$data.tags.push(newCategory);\n              this.$data.newCategory = '';\n              this.$data.dialog = false;\n              // Create a new item with the type.S = 'images' and label.S = given string\n              let itemProvider = new ItemProvider(); // eslint-disable-line\n              itemProvider.findNewId().then((newId) => {\n                let item = {\n                  id: {\n                    N: \"\" + newId,\n                  },\n                  label: {\n                    S: newCategory,\n                  },\n                  type: {\n                    S: \"images\",\n                  },\n                  content: {\n                    S: \"images\",\n                  },\n                };\n                itemProvider.updateItem(newId, item);\n              });\n            }\n            \n        },\n        removeTag: function(i) {\n            this.$data.tags.splice(i, 1);\n        },\n        makeActive: function(i, activeCollection) {\n            if (this.$data.displayImages[i].collections.includes(activeCollection)) {\n              let index = this.$data.displayImages[i].collections.indexOf(activeCollection);\n              this.$data.displayImages[i].collections.splice(index, 1); \n            } else {\n              this.$data.displayImages[i].collections.push(activeCollection);\n            }\n        },\n        changeActiveCollection: function(collection) {\n          this.$data.activeCollection = collection;\n        },\n        connectImagesToItems: function(items, images) {\n          // Don't look at this ugly as heck code...\n          // Three nested for loops ¯\\_(ツ)_/¯\n          for (let i = 0; i < items.length; i += 1) {\n            this.tags.push(items[i].label.S);\n            if (items[i].imageIds.L.length > 0) { \n              for (let j = 0; j < items[i].imageIds.L.length; j += 1) {\n                for(let k = 0; k < images.length; k += 1) {\n                  if(!images[k].collections) {\n                    images[k].collections = [];\n                  }\n                  if (images[k].id.N == items[i].imageIds.L[j].N) {\n                    images[k].collections.push(items[i].label.S);\n                  }\n                }\n              }\n            }\n          }\n          this.$data.displayImages = images;\n        },\n        loadImageContent: function() {\n          let imageProvider = new ImageProvider();\n          let itemProvider = new ItemProvider();\n          imageProvider.getAllImages().then((images) => {\n            itemProvider.getItemsByContent(\"images\").then((items) => {\n              this.connectImagesToItems(items, images);\n            });  \n          });\n        },\n        updateCollections: function() {\n          let itemProvider = new ItemProvider();\n          itemProvider.getItemsByContentAndLabel(\"images\", this.$data.activeCollection).then((items) => {\n            // Loop through each image and if the image has the activeCollection then we add the image's id to items[0].imageIds.L\n            let imageIds = [];\n            for (let i = 0; i < this.$data.displayImages.length; i += 1) {\n              for(let j = 0; j < this.$data.displayImages[i].collections.length; j += 1) {\n                if (this.$data.activeCollection == this.$data.displayImages[i].collections[j]) {\n                  imageIds.push(this.$data.displayImages[i].id);\n                }\n              }\n            }\n            items[0].imageIds.L = imageIds;\n            itemProvider.updateItem(items[0].id.N, items[0]);\n          });  \n        },\n    },\n   mounted() {\n        this.loadImageContent();\n    }\n}\n</script>\n<style scoped>\n.title {\n  text-align: center;\n}\n.removeTag {\n    margin-left: 5%;\n}\n.addTag {\n    margin-top: auto;\n    margin-bottom: auto;\n}\n.selectCheck {\n    width: 100%;\n    color: blue;\n}\n.confirmButton {\n    width: 10%;\n    margin: auto;\n    text-align: auto;\n}\n\n.pictureCard {\n  margin: auto;\n  height: 80%;\n  width: 20%;\n}\n\n.selectionImage {\n  display: flex;\n  align-items: center;\n  height: auto;\n  width: 100%;\n}\n\nh5 {\n  text-align: center;\n}\n\n.textField {\n  height: 10%;\n}\n</style>\n"]}]}