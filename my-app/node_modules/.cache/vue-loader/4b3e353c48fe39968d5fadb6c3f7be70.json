{"remainingRequest":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/src/components/edit/InfoEdit.vue?vue&type=style&index=0&id=5d75e006&scoped=true&lang=css&","dependencies":[{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/src/components/edit/InfoEdit.vue","mtime":1603595948905},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCiNlZGl0LWluZm8gewogICAgbWFyZ2luOiAyLjUlIDUlIDAlIDUlCn0KCi5ub0RlY29yYXRpb25MaW5rewogICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOwp9CgovKiAKdGhlIHRyZWF0ZWQgdHJlZQoKc2hhbGxvdyByb290ZWQgaXNvbGF0ZSB0cnVuawpzd2VhdHMgZ2xpc3RlbmluZyBiZWFkcyBmcm9tIGl0cyBzcHJpbmtsZXIKZ3JlZW4gbGVhdmVzIGluIHRoZSB2YWxsZXkKb2YgYnVybnQgYnJvd25zIGFuZCBkcm91Z2h0IHllbGxvd3MKCnN3YXkgaW4gdGhlIHdpbmQgb2YgZHVzdApjcmVzdGluZyB0aGUgbmF0dXJhbCBoaWxscwp0byBidWZmZXQgdGhlIHN5bnRoZXRpY2FsbHkKb3JnYW5pYyBkZXNpZ25lciBiYXJrCgpuZXN0bGVkIGluIGEgYmVkIG9mIG11bGNoCmEgYmVkIG9mIHN0aW5reSBzaGl0CmRpcnR5IHdvcmsgdG8gcmFpc2Ugc29tZXRoaW5nIHN1Y2Nlc3NmdWwgCmluIGEgdmFsbGV5IHRoYXQgc2hvdWxkIGJlIGRlYWQgCgoqLwo="},{"version":3,"sources":["InfoEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsKA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"InfoEdit.vue","sourceRoot":"src/components/edit","sourcesContent":["<template>\n    <div id=\"edit-info\">\n\n        <!-- create new -->\n        <v-row justify=\"end\" class='ma-2'>\n            <v-btn \n            outlined\n            @click=\"addSection()\">\n                <v-icon>mdi-plus</v-icon>\n                Create New Section\n            </v-btn>\n        </v-row>\n\n        <!--header-->\n        <v-row \n        class=\"my-5 mx-1\"\n        justify=\"start\">\n            <h2>Sections ({{totalSections}})</h2>\n        </v-row>\n\n        <!--sections-->\n        <v-row>\n            <v-col \n            cols=\"12\" sm=\"3\" md=\"4\"\n            v-for=\"(section,s) of info\"\n            :key=\"'section' + s\">\n                <InfoSection :section=\"info[s]\" :s=\"s\" />\n            </v-col>\n        </v-row>\n    </div>\n</template>\n\n<script>\nimport { ItemProvider, CategoryProvider } from '../../providers';\nimport InfoSection from './infoSection';\n\nexport default {\n    components: {\n        InfoSection\n    },\n    data: function() {\n        return {\n            info: [],\n            types: [\n                \"icon\",\n                \"images\",\n                \"simpleLink\",\n            ],\n            show: -1,\n        }\n    },\n    async mounted() {\n        let provider = new CategoryProvider();\n        this.$data.info = await provider.getCategoryItems()\n        provider.getCategoryItems().then(res => {\n            console.log(\"got em\")  //eslint-disable-line\n            console.log(res) //eslint-disable-line\n        })\n    },\n    computed: {\n        totalSections: function() {\n            return this.$data.info && this.$data.info.length\n        }\n    },\n    methods: {\n        toggleShow: function(cat_index) {\n            this.$data.show = (this.$data.show === cat_index ? -1 : cat_index)\n        },\n        addItem: function(s) {\n            // add new empty item to section\n            let newItem = {\n                type: {S: \"icon\"},\n                id: {N: \"UNKNOWN\"},\n                externalUrl: {S: \"\"},\n                icon: {S: \"\"},\n                label: {S: \"\"}\n            };\n            this.$data.info[s].items.push(newItem);\n        },\n        onSelectType: function(type, i, j) {\n            // change type of item\n\n            let currItem = this.$data.info[i].items[j];\n\n            console.log(\"onselect - type = \" + type) //eslint-disable-line\n\n            let newItem = { \n                type: {S: type}, \n                id: {N: currItem.id.N},\n                label: {S: \"\"},\n                externalUrl: {S: \"\"},\n                icon: {S: \"\"}\n            };\n\n            if (type === 'images') {\n                newItem.imageIds = {L: [{N : \"1\"}]};\n            } \n\n            this.$data.info[i].items.splice(j,1, newItem);\n        },\n        updateItems: function(i) {\n            // save item changes in a given section\n            let itemProvider = new ItemProvider();\n            let categoryProvider = new CategoryProvider();\n\n            let category = {\n                name: this.$data.info[i].category,\n                items: []\n            }\n\n            this.$data.info[i].items.forEach(item => {\n                if (item.id.N === \"UNKNOWN\") \n                    item.id.N = `${this.newId()}`;\n                category.items.push(item.id.N)\n                itemProvider.updateItem(item.id.N, item);\n            }); \n\n            categoryProvider.updateCategory(category);\n        },\n        newId: function() {\n            // creates new id\n            let max = -1;\n            for (let section of this.$data.info) {\n                for(let item of section.items) {\n                    if (parseInt(item.id.N) > max) {\n                        max = parseInt(item.id.N);\n                    }\n                }\n            }\n            return max + 1;\n        },\n        deleteItem: function(i, j) {\n            // remove item from section\n            this.$data.info[i].items.splice(j, 1);\n        },\n        addSection: function() {\n            // creates new empty section\n            this.$data.info.push({\n                category: '',\n                items: [],\n            });\n\n            this.$data.show = this.$data.info.length -1\n        },\n        deleteSection: function(i) {\n            // deletes a section\n            let categoryProvider =  new CategoryProvider();\n            let itemProvider = new ItemProvider();\n\n            let category = this.$data.info[i].category;\n            let items = this.$data.info[i].items;\n            this.$data.info.splice(i, 1);\n            \n            categoryProvider.deleteCategory(category);\n            \n            items.forEach(item => {\n                if( item.id.N !== \"UNKNOWN\") \n                    itemProvider.deleteItem(item.id.N);\n            })\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n#edit-info {\n    margin: 2.5% 5% 0% 5%\n}\n\n.noDecorationLink{\n    text-decoration: none;\n}\n\n/* \nthe treated tree\n\nshallow rooted isolate trunk\nsweats glistening beads from its sprinkler\ngreen leaves in the valley\nof burnt browns and drought yellows\n\nsway in the wind of dust\ncresting the natural hills\nto buffet the synthetically\norganic designer bark\n\nnestled in a bed of mulch\na bed of stinky shit\ndirty work to raise something successful \nin a valley that should be dead \n\n*/\n</style>"]}]}