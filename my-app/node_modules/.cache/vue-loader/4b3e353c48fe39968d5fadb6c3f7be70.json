{"remainingRequest":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/src/components/edit/InfoEdit.vue?vue&type=style&index=0&id=5d75e006&scoped=true&lang=css&","dependencies":[{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/src/components/edit/InfoEdit.vue","mtime":1603244547541},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojZWRpdC1pbmZvIHsKICAgIG1hcmdpbjogMi41JSA1JSAwJSA1JQp9CgovKiAKdGhlIHRyZWF0ZWQgdHJlZQoKc2hhbGxvdyByb290ZWQgaXNvbGF0ZSB0cnVuawpzd2VhdHMgZ2xpc3RlbmluZyBiZWFkcyBmcm9tIGl0cyBzcHJpbmtsZXIKZ3JlZW4gbGVhdmVzIGluIHRoZSB2YWxsZXkKb2YgYnVybnQgYnJvd25zIGFuZCBkcm91Z2h0IHllbGxvd3MKCnN3YXkgaW4gdGhlIHdpbmQgb2YgZHVzdApjcmVzdGluZyB0aGUgbmF0dXJhbCBoaWxscwp0byBidWZmZXQgdGhlIHN5bnRoZXRpY2FsbHkKb3JnYW5pYyBkZXNpZ25lciBiYXJrCgpuZXN0bGVkIGluIGEgYmVkIG9mIG11bGNoCmEgYmVkIG9mIHN0aW5reSBzaGl0CmRpcnR5IHdvcmsgdG8gcmFpc2Ugc29tZXRoaW5nIHN1Y2Nlc3NmdWwgCmluIGEgdmFsbGV5IHRoYXQgc2hvdWxkIGJlIGRlYWQgCgoqLwo="},{"version":3,"sources":["InfoEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoQA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA","file":"InfoEdit.vue","sourceRoot":"src/components/edit","sourcesContent":["<template>\n    <div id=\"edit-info\">\n        <v-row>\n            <v-col cols=\"12\" sm=\"3\" md=\"4\"\n             v-for=\"(heading, i) of info\"\n            v-bind:key=i>\n                \n                <v-card flat\n                    class=\"mx-auto ma-5\"\n                    max-width=\"600\"\n                    outlined \n                >\n            <v-card-title class=\"ma-2\">\n                {{heading.category}} ({{heading.items.length}})\n                    <v-spacer></v-spacer>\n                    <v-btn\n                        icon\n                        @click=\"show = !show\"\n                    >\n                        <v-icon>{{ show ? 'mdi-close-circle-outline'  :'mdi-pencil-outline' }}</v-icon>\n                    </v-btn>\n            </v-card-title>\n            <v-card-subtitle >\n                <div\n                v-for=\"(item) of heading.items\"\n                :key=\"item\"\n                >\n                    <p v-if=\"item.label\">{{item.label}}</p>\n                    <p v-if=\"item.content\">{{item.content}}</p>\n                </div>\n            </v-card-subtitle>\n    \n            <v-expand-transition>\n                <div v-show=\"show\">\n                    <v-divider></v-divider>\n                    <v-flex class=\"pa-1\">\n                        <v-text-field\n                class=\"editField\"\n                v-model=\"heading.category\"\n                outlined>\n                    <template v-slot:label>\n                        {{ \"Category \" + i}}\n                    </template>\n                </v-text-field>\n                        <div\n                            v-for=\"(item, j) of heading.items\"\n                            v-bind:key=j\n                            class=\"item\">\n\n                            <v-select v-model=\"item.type.S\" :items=\"types\" label=\"Item Type\" v-on:change=\"onSelect(item.type.S, i, j)\"></v-select>\n                            \n                            <div v-if=\"item.type.S === 'icon'\">\n                                <v-text-field\n                                    class=\"editField\"\n                                    v-model=\"item.content.S\"\n                                    outlined>\n                                        <template v-slot:label>\n                                            {{ \"Item \" + j}}\n                                        </template>\n                                </v-text-field>\n                                <v-text-field\n                                    class=\"editField\"\n                                    v-model=\"item.externalUrl.S\"\n                                    outlined>\n                                        <template v-slot:label>\n                                            {{ \"Link to \"}}\n                                        </template>\n                                </v-text-field>\n                                <v-text-field\n                                    class=\"mb-2 editField\"\n                                    v-model=\"item.icon.S\"\n                                    id=\"iconField\"\n                                    outlined>\n                                        <template v-slot:label>\n                                            {{ \"Icon\"}}\n                                        </template>\n                                        <template v-slot:append-outer>\n                                             <a class=\"noDecorationLink\" href=\"https://materialdesignicons.com/\">\n                                             <v-icon >mdi-help-circle-outline</v-icon>\n                                             </a>\n                                        </template>\n                                </v-text-field>\n                            </div>\n\n                            <div v-if=\"item.type.S === 'images'\"> \n                                <v-text-field\n                                    class=\"editField\"\n                                    v-model=\"item.label.S\"\n                                    outlined>\n                                        <template v-slot:label>\n                                            {{ \"Item \" + j}}\n                                        </template>\n                                </v-text-field>\n                            </div>\n\n                            <div v-if=\"item.type.S === 'simpleLink'\">\n                                <v-text-field\n                                    class=\"editField\"\n                                    v-model=\"item.label.S\"\n                                    outlined>\n                                        <template v-slot:label>\n                                            {{ \"Item \" + j}}\n                                        </template>\n                                </v-text-field>\n\n                                <v-text-field\n                                    class=\"editField\"\n                                    v-model=\"item.externalUrl.S\"\n                                    outlined>\n                                        <template v-slot:label>\n                                            {{ \"url \"}}\n                                        </template>\n                                </v-text-field>\n                            </div>\n                            <v-btn v-on:click=\"deleteItem(i,j)\">\n                                <v-icon small>mdi-delete</v-icon>\n                            </v-btn>\n                        </div>\n                    </v-flex>\n\n                        <v-btn class=\"editButton\" color=\"#29B6\" v-on:click=\"addItem(i)\">\n                    add item\n                    </v-btn>\n                    \n                <v-btn class=\"editButton\" color=\"#29B6\" v-on:click=\"updateItems(i)\">\n                    apply changes\n                </v-btn>\n                <v-btn height=\"55\" class=\"deleteButton\" v-on:click=\"deleteHeader(i)\">\n                    delete section\n                </v-btn>\n                </div>\n                </v-expand-transition>\n        </v-card>\n\n            </v-col>\n        </v-row>\n        \n        <div class=\"belowCard\">\n            <v-btn class=\"editButton\" color=\"#29B6\" v-on:click=\"addHeader()\">\n            Create Section\n            </v-btn>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { ItemProvider, CategoryProvider } from '../../providers';\n\nexport default {\n    components: {\n    },\n    data: function() {\n        return {\n            info: [],\n            types: [\n                \"icon\",\n                \"images\",\n                \"simpleLink\",\n            ],\n            show: false,\n        }\n    },\n    async mounted() {\n        let provider = new CategoryProvider();\n        this.$data.info = await provider.getCategoryItems();\n        return;\n    },\n    methods: {\n        addItem: function(i) {\n            let emptyItem = {\n                type: {S: \"icon\"},\n                id: {N: \"UNKOWN\"},\n                content: {S: \"\"},\n                externalUrl: {S: \"\"},\n                icon: {S: \"\"},\n            };\n            this.$data.info[i].items.push(emptyItem);\n        },\n        onSelect: function(type, i, j) {\n            let newItem = { type: {S: type}, id: {N: this.$data.info[i].items[j].id.N}};\n            if (type === 'icon') {\n                newItem.content = {S: \"\"};\n                newItem.externalUrl = {S: \"\"};\n                newItem.icon = {S: \"\"};\n            } else  if (type === 'images') {\n                this.$data.info[i].items[j].type.S = 'images';\n                newItem.label = {S: \"\"};\n                newItem.imageIds = {L: [{N : \"1\"}]};\n                newItem.content = {S: \"images\"};\n            } else if (type === 'simpleLink') {\n                newItem.label = {S: \"\"};\n                newItem.externalUrl = {S: \"\"};\n            }\n            this.$data.info[i].items.splice(j,1, newItem);\n        },\n        updateItems: function(i) {\n            let category = {\n                    name: this.$data.info[i].category,\n                    items: [],\n            };\n            let itemProvider = new ItemProvider();\n            for (let item of this.$data.info[i].items) {\n                if (item.id.N !== 'UNKOWN') {\n                    category.items.push(item.id.N);\n                    itemProvider.updateItem(item.id.N, item);\n                } else {\n                    let id = this.newId();\n                    item.id = {N: \"\" + id};\n                    category.items.push(\"\" + id);\n                    itemProvider.updateItem(id, item);\n                }\n            }\n            let categoryProvider = new CategoryProvider();\n            categoryProvider.updateCateory(category);\n        },\n        newId: function() {\n            let max = -1;\n            for (let heading of this.$data.info) {\n                for(let item of heading.items) {\n                    if (parseInt(item.id.N) > max) {\n                        max = parseInt(item.id.N);\n                    }\n                }\n            }\n            return max + 1;\n        },\n        deleteItem: function(i, j) {\n            this.$data.info[i].items.splice(j, 1);\n        },\n        addHeader: function() {\n            this.$data.info.push({\n                category: '',\n                items: [\n                    {\n                        type: {S: \"icon\"},\n                        id: {N: \"UNKOWN\"},\n                        content: {S: \"\"},\n                        externalUrl: {S: \"\"},\n                        icon: {S: \"\"}, \n                    }\n                ],\n            });\n        },\n        deleteHeader: function(i) {\n            let category = this.$data.info[i].category;\n            let items = this.$data.info[i].items;\n            this.$data.info.splice(i, 1);\n            let categoryProvider =  new CategoryProvider();\n            categoryProvider.deleteCategory(category);\n            let itemProvider = new ItemProvider();\n            for(let item of items) {\n                if( item.id.N !== \"UNKNOWN\") {\n                    itemProvider.deleteItem(item.id.N);\n                }\n            }\n        }\n    }\n}\n</script>\n<style scoped>\n#edit-info {\n    margin: 2.5% 5% 0% 5%\n}\n\n/* \nthe treated tree\n\nshallow rooted isolate trunk\nsweats glistening beads from its sprinkler\ngreen leaves in the valley\nof burnt browns and drought yellows\n\nsway in the wind of dust\ncresting the natural hills\nto buffet the synthetically\norganic designer bark\n\nnestled in a bed of mulch\na bed of stinky shit\ndirty work to raise something successful \nin a valley that should be dead \n\n*/\n</style>"]}]}