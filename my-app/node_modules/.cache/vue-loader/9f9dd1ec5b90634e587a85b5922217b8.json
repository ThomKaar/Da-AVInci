{"remainingRequest":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/src/components/edit/InfoEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/src/components/edit/InfoEdit.vue","mtime":1603595948905},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1CALPOLY/ART/Da-AVInci/my-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCB7IEl0ZW1Qcm92aWRlciwgQ2F0ZWdvcnlQcm92aWRlciB9IGZyb20gJy4uLy4uL3Byb3ZpZGVycyc7CmltcG9ydCBJbmZvU2VjdGlvbiBmcm9tICcuL2luZm9TZWN0aW9uJzsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIGNvbXBvbmVudHM6IHsKICAgICAgICBJbmZvU2VjdGlvbgogICAgfSwKICAgIGRhdGE6IGZ1bmN0aW9uKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIGluZm86IFtdLAogICAgICAgICAgICB0eXBlczogWwogICAgICAgICAgICAgICAgImljb24iLAogICAgICAgICAgICAgICAgImltYWdlcyIsCiAgICAgICAgICAgICAgICAic2ltcGxlTGluayIsCiAgICAgICAgICAgIF0sCiAgICAgICAgICAgIHNob3c6IC0xLAogICAgICAgIH0KICAgIH0sCiAgICBhc3luYyBtb3VudGVkKCkgewogICAgICAgIGxldCBwcm92aWRlciA9IG5ldyBDYXRlZ29yeVByb3ZpZGVyKCk7CiAgICAgICAgdGhpcy4kZGF0YS5pbmZvID0gYXdhaXQgcHJvdmlkZXIuZ2V0Q2F0ZWdvcnlJdGVtcygpCiAgICAgICAgcHJvdmlkZXIuZ2V0Q2F0ZWdvcnlJdGVtcygpLnRoZW4ocmVzID0+IHsKICAgICAgICAgICAgY29uc29sZS5sb2coImdvdCBlbSIpICAvL2VzbGludC1kaXNhYmxlLWxpbmUKICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKSAvL2VzbGludC1kaXNhYmxlLWxpbmUKICAgICAgICB9KQogICAgfSwKICAgIGNvbXB1dGVkOiB7CiAgICAgICAgdG90YWxTZWN0aW9uczogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIHJldHVybiB0aGlzLiRkYXRhLmluZm8gJiYgdGhpcy4kZGF0YS5pbmZvLmxlbmd0aAogICAgICAgIH0KICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgdG9nZ2xlU2hvdzogZnVuY3Rpb24oY2F0X2luZGV4KSB7CiAgICAgICAgICAgIHRoaXMuJGRhdGEuc2hvdyA9ICh0aGlzLiRkYXRhLnNob3cgPT09IGNhdF9pbmRleCA/IC0xIDogY2F0X2luZGV4KQogICAgICAgIH0sCiAgICAgICAgYWRkSXRlbTogZnVuY3Rpb24ocykgewogICAgICAgICAgICAvLyBhZGQgbmV3IGVtcHR5IGl0ZW0gdG8gc2VjdGlvbgogICAgICAgICAgICBsZXQgbmV3SXRlbSA9IHsKICAgICAgICAgICAgICAgIHR5cGU6IHtTOiAiaWNvbiJ9LAogICAgICAgICAgICAgICAgaWQ6IHtOOiAiVU5LTk9XTiJ9LAogICAgICAgICAgICAgICAgZXh0ZXJuYWxVcmw6IHtTOiAiIn0sCiAgICAgICAgICAgICAgICBpY29uOiB7UzogIiJ9LAogICAgICAgICAgICAgICAgbGFiZWw6IHtTOiAiIn0KICAgICAgICAgICAgfTsKICAgICAgICAgICAgdGhpcy4kZGF0YS5pbmZvW3NdLml0ZW1zLnB1c2gobmV3SXRlbSk7CiAgICAgICAgfSwKICAgICAgICBvblNlbGVjdFR5cGU6IGZ1bmN0aW9uKHR5cGUsIGksIGopIHsKICAgICAgICAgICAgLy8gY2hhbmdlIHR5cGUgb2YgaXRlbQoKICAgICAgICAgICAgbGV0IGN1cnJJdGVtID0gdGhpcy4kZGF0YS5pbmZvW2ldLml0ZW1zW2pdOwoKICAgICAgICAgICAgY29uc29sZS5sb2coIm9uc2VsZWN0IC0gdHlwZSA9ICIgKyB0eXBlKSAvL2VzbGludC1kaXNhYmxlLWxpbmUKCiAgICAgICAgICAgIGxldCBuZXdJdGVtID0geyAKICAgICAgICAgICAgICAgIHR5cGU6IHtTOiB0eXBlfSwgCiAgICAgICAgICAgICAgICBpZDoge046IGN1cnJJdGVtLmlkLk59LAogICAgICAgICAgICAgICAgbGFiZWw6IHtTOiAiIn0sCiAgICAgICAgICAgICAgICBleHRlcm5hbFVybDoge1M6ICIifSwKICAgICAgICAgICAgICAgIGljb246IHtTOiAiIn0KICAgICAgICAgICAgfTsKCiAgICAgICAgICAgIGlmICh0eXBlID09PSAnaW1hZ2VzJykgewogICAgICAgICAgICAgICAgbmV3SXRlbS5pbWFnZUlkcyA9IHtMOiBbe04gOiAiMSJ9XX07CiAgICAgICAgICAgIH0gCgogICAgICAgICAgICB0aGlzLiRkYXRhLmluZm9baV0uaXRlbXMuc3BsaWNlKGosMSwgbmV3SXRlbSk7CiAgICAgICAgfSwKICAgICAgICB1cGRhdGVJdGVtczogZnVuY3Rpb24oaSkgewogICAgICAgICAgICAvLyBzYXZlIGl0ZW0gY2hhbmdlcyBpbiBhIGdpdmVuIHNlY3Rpb24KICAgICAgICAgICAgbGV0IGl0ZW1Qcm92aWRlciA9IG5ldyBJdGVtUHJvdmlkZXIoKTsKICAgICAgICAgICAgbGV0IGNhdGVnb3J5UHJvdmlkZXIgPSBuZXcgQ2F0ZWdvcnlQcm92aWRlcigpOwoKICAgICAgICAgICAgbGV0IGNhdGVnb3J5ID0gewogICAgICAgICAgICAgICAgbmFtZTogdGhpcy4kZGF0YS5pbmZvW2ldLmNhdGVnb3J5LAogICAgICAgICAgICAgICAgaXRlbXM6IFtdCiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIHRoaXMuJGRhdGEuaW5mb1tpXS5pdGVtcy5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgICAgICAgICAgaWYgKGl0ZW0uaWQuTiA9PT0gIlVOS05PV04iKSAKICAgICAgICAgICAgICAgICAgICBpdGVtLmlkLk4gPSBgJHt0aGlzLm5ld0lkKCl9YDsKICAgICAgICAgICAgICAgIGNhdGVnb3J5Lml0ZW1zLnB1c2goaXRlbS5pZC5OKQogICAgICAgICAgICAgICAgaXRlbVByb3ZpZGVyLnVwZGF0ZUl0ZW0oaXRlbS5pZC5OLCBpdGVtKTsKICAgICAgICAgICAgfSk7IAoKICAgICAgICAgICAgY2F0ZWdvcnlQcm92aWRlci51cGRhdGVDYXRlZ29yeShjYXRlZ29yeSk7CiAgICAgICAgfSwKICAgICAgICBuZXdJZDogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIC8vIGNyZWF0ZXMgbmV3IGlkCiAgICAgICAgICAgIGxldCBtYXggPSAtMTsKICAgICAgICAgICAgZm9yIChsZXQgc2VjdGlvbiBvZiB0aGlzLiRkYXRhLmluZm8pIHsKICAgICAgICAgICAgICAgIGZvcihsZXQgaXRlbSBvZiBzZWN0aW9uLml0ZW1zKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKHBhcnNlSW50KGl0ZW0uaWQuTikgPiBtYXgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgbWF4ID0gcGFyc2VJbnQoaXRlbS5pZC5OKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIG1heCArIDE7CiAgICAgICAgfSwKICAgICAgICBkZWxldGVJdGVtOiBmdW5jdGlvbihpLCBqKSB7CiAgICAgICAgICAgIC8vIHJlbW92ZSBpdGVtIGZyb20gc2VjdGlvbgogICAgICAgICAgICB0aGlzLiRkYXRhLmluZm9baV0uaXRlbXMuc3BsaWNlKGosIDEpOwogICAgICAgIH0sCiAgICAgICAgYWRkU2VjdGlvbjogZnVuY3Rpb24oKSB7CiAgICAgICAgICAgIC8vIGNyZWF0ZXMgbmV3IGVtcHR5IHNlY3Rpb24KICAgICAgICAgICAgdGhpcy4kZGF0YS5pbmZvLnB1c2goewogICAgICAgICAgICAgICAgY2F0ZWdvcnk6ICcnLAogICAgICAgICAgICAgICAgaXRlbXM6IFtdLAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIHRoaXMuJGRhdGEuc2hvdyA9IHRoaXMuJGRhdGEuaW5mby5sZW5ndGggLTEKICAgICAgICB9LAogICAgICAgIGRlbGV0ZVNlY3Rpb246IGZ1bmN0aW9uKGkpIHsKICAgICAgICAgICAgLy8gZGVsZXRlcyBhIHNlY3Rpb24KICAgICAgICAgICAgbGV0IGNhdGVnb3J5UHJvdmlkZXIgPSAgbmV3IENhdGVnb3J5UHJvdmlkZXIoKTsKICAgICAgICAgICAgbGV0IGl0ZW1Qcm92aWRlciA9IG5ldyBJdGVtUHJvdmlkZXIoKTsKCiAgICAgICAgICAgIGxldCBjYXRlZ29yeSA9IHRoaXMuJGRhdGEuaW5mb1tpXS5jYXRlZ29yeTsKICAgICAgICAgICAgbGV0IGl0ZW1zID0gdGhpcy4kZGF0YS5pbmZvW2ldLml0ZW1zOwogICAgICAgICAgICB0aGlzLiRkYXRhLmluZm8uc3BsaWNlKGksIDEpOwogICAgICAgICAgICAKICAgICAgICAgICAgY2F0ZWdvcnlQcm92aWRlci5kZWxldGVDYXRlZ29yeShjYXRlZ29yeSk7CiAgICAgICAgICAgIAogICAgICAgICAgICBpdGVtcy5mb3JFYWNoKGl0ZW0gPT4gewogICAgICAgICAgICAgICAgaWYoIGl0ZW0uaWQuTiAhPT0gIlVOS05PV04iKSAKICAgICAgICAgICAgICAgICAgICBpdGVtUHJvdmlkZXIuZGVsZXRlSXRlbShpdGVtLmlkLk4pOwogICAgICAgICAgICB9KQogICAgICAgIH0KICAgIH0KfQo="},{"version":3,"sources":["InfoEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAifile":"InfoEdit.vue","sourceRoot":"src/components/edit","sourcesContent":["<template>\n    <div id=\"edit-info\">\n\n        <!-- create new -->\n        <v-row justify=\"end\" class='ma-2'>\n            <v-btn \n            outlined\n            @click=\"addSection()\">\n                <v-icon>mdi-plus</v-icon>\n                Create New Section\n            </v-btn>\n        </v-row>\n\n        <!--header-->\n        <v-row \n        class=\"my-5 mx-1\"\n        justify=\"start\">\n            <h2>Sections ({{totalSections}})</h2>\n        </v-row>\n\n        <!--sections-->\n        <v-row>\n            <v-col \n            cols=\"12\" sm=\"3\" md=\"4\"\n            v-for=\"(section,s) of info\"\n            :key=\"'section' + s\">\n                <InfoSection :section=\"info[s]\" :s=\"s\" />\n            </v-col>\n        </v-row>\n    </div>\n</template>\n\n<script>\nimport { ItemProvider, CategoryProvider } from '../../providers';\nimport InfoSection from './infoSection';\n\nexport default {\n    components: {\n        InfoSection\n    },\n    data: function() {\n        return {\n            info: [],\n            types: [\n                \"icon\",\n                \"images\",\n                \"simpleLink\",\n            ],\n            show: -1,\n        }\n    },\n    async mounted() {\n        let provider = new CategoryProvider();\n        this.$data.info = await provider.getCategoryItems()\n        provider.getCategoryItems().then(res => {\n            console.log(\"got em\")  //eslint-disable-line\n            console.log(res) //eslint-disable-line\n        })\n    },\n    computed: {\n        totalSections: function() {\n            return this.$data.info && this.$data.info.length\n        }\n    },\n    methods: {\n        toggleShow: function(cat_index) {\n            this.$data.show = (this.$data.show === cat_index ? -1 : cat_index)\n        },\n        addItem: function(s) {\n            // add new empty item to section\n            let newItem = {\n                type: {S: \"icon\"},\n                id: {N: \"UNKNOWN\"},\n                externalUrl: {S: \"\"},\n                icon: {S: \"\"},\n                label: {S: \"\"}\n            };\n            this.$data.info[s].items.push(newItem);\n        },\n        onSelectType: function(type, i, j) {\n            // change type of item\n\n            let currItem = this.$data.info[i].items[j];\n\n            console.log(\"onselect - type = \" + type) //eslint-disable-line\n\n            let newItem = { \n                type: {S: type}, \n                id: {N: currItem.id.N},\n                label: {S: \"\"},\n                externalUrl: {S: \"\"},\n                icon: {S: \"\"}\n            };\n\n            if (type === 'images') {\n                newItem.imageIds = {L: [{N : \"1\"}]};\n            } \n\n            this.$data.info[i].items.splice(j,1, newItem);\n        },\n        updateItems: function(i) {\n            // save item changes in a given section\n            let itemProvider = new ItemProvider();\n            let categoryProvider = new CategoryProvider();\n\n            let category = {\n                name: this.$data.info[i].category,\n                items: []\n            }\n\n            this.$data.info[i].items.forEach(item => {\n                if (item.id.N === \"UNKNOWN\") \n                    item.id.N = `${this.newId()}`;\n                category.items.push(item.id.N)\n                itemProvider.updateItem(item.id.N, item);\n            }); \n\n            categoryProvider.updateCategory(category);\n        },\n        newId: function() {\n            // creates new id\n            let max = -1;\n            for (let section of this.$data.info) {\n                for(let item of section.items) {\n                    if (parseInt(item.id.N) > max) {\n                        max = parseInt(item.id.N);\n                    }\n                }\n            }\n            return max + 1;\n        },\n        deleteItem: function(i, j) {\n            // remove item from section\n            this.$data.info[i].items.splice(j, 1);\n        },\n        addSection: function() {\n            // creates new empty section\n            this.$data.info.push({\n                category: '',\n                items: [],\n            });\n\n            this.$data.show = this.$data.info.length -1\n        },\n        deleteSection: function(i) {\n            // deletes a section\n            let categoryProvider =  new CategoryProvider();\n            let itemProvider = new ItemProvider();\n\n            let category = this.$data.info[i].category;\n            let items = this.$data.info[i].items;\n            this.$data.info.splice(i, 1);\n            \n            categoryProvider.deleteCategory(category);\n            \n            items.forEach(item => {\n                if( item.id.N !== \"UNKNOWN\") \n                    itemProvider.deleteItem(item.id.N);\n            })\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n#edit-info {\n    margin: 2.5% 5% 0% 5%\n}\n\n.noDecorationLink{\n    text-decoration: none;\n}\n\n/* \nthe treated tree\n\nshallow rooted isolate trunk\nsweats glistening beads from its sprinkler\ngreen leaves in the valley\nof burnt browns and drought yellows\n\nsway in the wind of dust\ncresting the natural hills\nto buffet the synthetically\norganic designer bark\n\nnestled in a bed of mulch\na bed of stinky shit\ndirty work to raise something successful \nin a valley that should be dead \n\n*/\n</style>"]}]}