{"remainingRequest":"/mnt/c/users/kenak/documents/1calpoly/art/Da-AVInci/my-app/node_modules/babel-loader/lib/index.js!/mnt/c/users/kenak/documents/1calpoly/art/Da-AVInci/my-app/node_modules/vuetify-loader/lib/loader.js!/mnt/c/users/kenak/documents/1calpoly/art/Da-AVInci/my-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/mnt/c/users/kenak/documents/1calpoly/art/Da-AVInci/my-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/mnt/c/users/kenak/documents/1calpoly/art/Da-AVInci/my-app/src/components/ImageUploader.vue?vue&type=script&lang=js&","dependencies":[{"path":"/mnt/c/users/kenak/documents/1calpoly/art/Da-AVInci/my-app/src/components/ImageUploader.vue","mtime":1593887255368},{"path":"/mnt/c/users/kenak/documents/1calpoly/art/Da-AVInci/my-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1calpoly/art/Da-AVInci/my-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1calpoly/art/Da-AVInci/my-app/node_modules/vuetify-loader/lib/loader.js","mtime":1564062719000},{"path":"/mnt/c/users/kenak/documents/1calpoly/art/Da-AVInci/my-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/mnt/c/users/kenak/documents/1calpoly/art/Da-AVInci/my-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5uYW1lIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLyBpbXBvcnQgdnVlMkRyb3B6b25lIGZyb20gJ3Z1ZTItZHJvcHpvbmUnCi8vIGltcG9ydCAndnVlMi1kcm9wem9uZS9kaXN0L3Z1ZTJEcm9wem9uZS5taW4uY3NzJwppbXBvcnQgVnVlIGZyb20gJ3Z1ZSc7CmltcG9ydCBGaWxlVXBsb2FkIGZyb20gJ3YtZmlsZS11cGxvYWQnOwppbXBvcnQgdnVlMkRyb3B6b25lIGZyb20gJ3Z1ZTItZHJvcHpvbmUnOwppbXBvcnQgJ3Z1ZTItZHJvcHpvbmUvZGlzdC92dWUyRHJvcHpvbmUubWluLmNzcyc7CmltcG9ydCB7IEltYWdlUHJvdmlkZXIsIEl0ZW1Qcm92aWRlciB9IGZyb20gIi4uL3Byb3ZpZGVycyI7ClZ1ZS51c2UoRmlsZVVwbG9hZCk7ClZ1ZS51c2UodnVlMkRyb3B6b25lKTsKZXhwb3J0IGRlZmF1bHQgewogIGNvbXBvbmVudHM6IHt9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB1cmw6ICdodHRwOi8vbG9jYWxob3N0OjMwMDAvaW1hZ2UvdXBsb2FkJywKICAgICAgaGVhZGVyczoge30sCiAgICAgIGZpbGVzVXBsb2FkZWQ6IFtdLAogICAgICB0aXRsZTogIiIsCiAgICAgIGZpbGVFeHRlbnNpb246ICIiLAogICAgICBsb2FkaW5nOiBmYWxzZSwKICAgICAgZmlsZToge30KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICB0aHVtYlVybDogZnVuY3Rpb24gdGh1bWJVcmwoZmlsZSkgewogICAgICByZXR1cm4gZmlsZS5teVRodW1iVXJsUHJvcGVydHk7CiAgICB9LAogICAgb25GaWxlVXBkYXRlOiBmdW5jdGlvbiBvbkZpbGVVcGRhdGUoZmlsZSkgewogICAgICB0aGlzLiRkYXRhLmZpbGVzVXBsb2FkZWQgPSBmaWxlLnRhcmdldC5maWxlc1swXTsKICAgICAgdGhpcy4kZGF0YS50aXRsZSA9IGZpbGUudGFyZ2V0LmZpbGVzWzBdLm5hbWUuc3BsaXQoJy4nKVswXTsKICAgICAgdGhpcy4kZGF0YS5maWxlRXh0ZW5zaW9uID0gZmlsZS50YXJnZXQuZmlsZXNbMF0ubmFtZS5zcGxpdCgnLicpWzFdOwogICAgfSwKICAgIHVwbG9hZEZpbGVzOiBmdW5jdGlvbiB1cGxvYWRGaWxlcygpIHsKICAgICAgLy8gdGhpcy4kZGF0YS5sb2FkaW5nID0gdHJ1ZTsKICAgICAgLy8gZW1pdCBldmVudCB0byByZWxvYWQgdGhlIGltYWdlT3JnYW5pemVyIG9uY2UgdGhlIGltYWdlIGlzIHVwbG9hZGVkCiAgICAgIC8vIHNldCBsb2FkaW5nIHVudGlsIHRoZSB1cGxvYWQgaXMgZG9uZS4uLgogICAgICB2YXIgZmlsZSA9IHRoaXMuJGRhdGEuZmlsZXNVcGxvYWRlZDsKICAgICAgdmFyIHRpdGxlID0gdGhpcy4kZGF0YS50aXRsZTsKICAgICAgdmFyIGV4dGVuc2lvbiA9IHRoaXMuJGRhdGEuZmlsZUV4dGVuc2lvbjsKICAgICAgdmFyIGNvbnRlbnRUeXBlID0gJyc7CgogICAgICBpZiAoZXh0ZW5zaW9uLmluY2x1ZGVzKCdqcGVnJykgfHwgZXh0ZW5zaW9uLmluY2x1ZGVzKCdqcGcnKSkgewogICAgICAgIGNvbnRlbnRUeXBlID0gJ2ltYWdlL2pwZWcnOwogICAgICB9IGVsc2UgaWYgKGV4dGVuc2lvbi5pbmNsdWRlcygncG5nJykpIHsKICAgICAgICBjb250ZW50VHlwZSA9ICdpbWFnZS9wbmcnOwogICAgICB9IGVsc2UgaWYgKGV4dGVuc2lvbi5pbmNsdWRlcygnZ2lmJykpIHsKICAgICAgICBjb250ZW50VHlwZSA9ICdpbWFnZS9naWYnOwogICAgICB9CgogICAgICB2YXIgcmVhZGVyID0gbmV3IEZpbGVSZWFkZXIoKTsKCiAgICAgIHJlYWRlci5vbmxvYWRlbmQgPSBmdW5jdGlvbiAoZSkgewogICAgICAgIC8vIHNhdmUgdGhpcyBkYXRhMTExMSBhbmQgc2VuZCB0byBzZXJ2ZXIKICAgICAgICB2YXIgZGF0YTExMTEgPSBlLnRhcmdldC5yZXN1bHQ7IC8vIHJlYWRlci5yZXN1bHQgLy8gLS0tLS0tLS0tLS0tLS0tLS0gZGF0YTExMTEKCiAgICAgICAgdmFyIGltYWdlUHJvdmlkZXIgPSBuZXcgSW1hZ2VQcm92aWRlcigpOwogICAgICAgIHZhciBib2R5ID0gewogICAgICAgICAgZmlsZTogZGF0YTExMTEsCiAgICAgICAgICB0aXRsZTogdGl0bGUsCiAgICAgICAgICBjb250ZW50VHlwZTogY29udGVudFR5cGUKICAgICAgICB9OwogICAgICAgIGltYWdlUHJvdmlkZXIudXBsb2FkSW1hZ2UoYm9keSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIHZhciBpdGVtUHJvdmlkZXIgPSBuZXcgSXRlbVByb3ZpZGVyKCk7CiAgICAgICAgICBpdGVtUHJvdmlkZXIuY3JlYXRlSXRlbSh7CiAgICAgICAgICAgIHRpdGxlOiB0aXRsZSwKICAgICAgICAgICAgdXJsOiByZXNwb25zZS5Mb2NhdGlvbgogICAgICAgICAgfSk7CiAgICAgICAgfSk7CiAgICAgIH07CgogICAgICByZWFkZXIucmVhZEFzQmluYXJ5U3RyaW5nKGZpbGUpOwogICAgfSwKICAgIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7fQogIH0KfTs="},{"version":3,"sources":["ImageUploader.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0CA;AACA;AACA,OAAA,GAAA,MAAA,KAAA;AACA,OAAA,UAAA,MAAA,eAAA;AACA,OAAA,YAAA,MAAA,eAAA;AACA,OAAA,yCAAA;AAEA,SAAA,aAAA,EAAA,YAAA;AACA,GAAA,CAAA,GAAA,CAAA,UAAA;AACA,GAAA,CAAA,GAAA,CAAA,YAAA;AACA,eAAA;AACA,EAAA,UAAA,EAAA,EADA;AAGA,EAAA,IAAA,EAAA,gBAAA;AACA,WAAA;AACA,MAAA,GAAA,EAAA,oCADA;AAEA,MAAA,OAAA,EAAA,EAFA;AAGA,MAAA,aAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA,EAJA;AAKA,MAAA,aAAA,EAAA,EALA;AAMA,MAAA,OAAA,EAAA,KANA;AAOA,MAAA,IAAA,EAAA;AAPA,KAAA;AASA,GAbA;AAcA,EAAA,OAAA,EAAA;AACA,IAAA,QAAA,EAAA,kBAAA,IAAA,EAAA;AACA,aAAA,IAAA,CAAA,kBAAA;AACA,KAHA;AAIA,IAAA,YAAA,EAAA,sBAAA,IAAA,EAAA;AACA,WAAA,KAAA,CAAA,aAAA,GAAA,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,WAAA,KAAA,CAAA,KAAA,GAAA,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA,IAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AACA,WAAA,KAAA,CAAA,aAAA,GAAA,IAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,EAAA,IAAA,CAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAA;AAEA,KATA;AAUA,IAAA,WAAA,EAAA,uBAAA;AACA;AACA;AACA;AAEA,UAAA,IAAA,GAAA,KAAA,KAAA,CAAA,aAAA;AACA,UAAA,KAAA,GAAA,KAAA,KAAA,CAAA,KAAA;AACA,UAAA,SAAA,GAAA,KAAA,KAAA,CAAA,aAAA;AACA,UAAA,WAAA,GAAA,EAAA;;AACA,UAAA,SAAA,CAAA,QAAA,CAAA,MAAA,KAAA,SAAA,CAAA,QAAA,CAAA,KAAA,CAAA,EAAA;AACA,QAAA,WAAA,GAAA,YAAA;AACA,OAFA,MAEA,IAAA,SAAA,CAAA,QAAA,CAAA,KAAA,CAAA,EAAA;AACA,QAAA,WAAA,GAAA,WAAA;AACA,OAFA,MAEA,IAAA,SAAA,CAAA,QAAA,CAAA,KAAA,CAAA,EAAA;AACA,QAAA,WAAA,GAAA,WAAA;AACA;;AACA,UAAA,MAAA,GAAA,IAAA,UAAA,EAAA;;AACA,MAAA,MAAA,CAAA,SAAA,GAAA,UAAA,CAAA,EAAA;AACA;AACA,YAAA,QAAA,GAAA,CAAA,CAAA,MAAA,CAAA,MAAA,CAFA,CAEA;;AACA,YAAA,aAAA,GAAA,IAAA,aAAA,EAAA;AACA,YAAA,IAAA,GAAA;AACA,UAAA,IAAA,EAAA,QADA;AAEA,UAAA,KAAA,EAAA,KAFA;AAGA,UAAA,WAAA,EAAA;AAHA,SAAA;AAKA,QAAA,aAAA,CAAA,WAAA,CAAA,IAAA,EAAA,IAAA,CAAA,UAAA,QAAA,EAAA;AACA,cAAA,YAAA,GAAA,IAAA,YAAA,EAAA;AACA,UAAA,YAAA,CAAA,UAAA,CAAA;AACA,YAAA,KAAA,EAAA,KADA;AAEA,YAAA,GAAA,EAAA,QAAA,CAAA;AAFA,WAAA;AAIA,SANA;AAOA,OAhBA;;AAiBA,MAAA,MAAA,CAAA,kBAAA,CAAA,IAAA;AACA,KA7CA;AA8CA,IAAA,OAAA,EAAA,mBAAA,CAEA;AAhDA;AAdA,CAAA","sourcesContent":["<template>\n     <v-card raised\n        class=\"mx-auto\"\n        max-width=\"344\"\n        outlined>\n    <form class=\"form\">\n      <v-list-item three-line>\n        <v-list-item-content>\n          <v-list-item-title class=\"headline mb-1 title\">Image Uploader</v-list-item-title>\n          <v-text-field\n            class=\"titleField\"\n            v-model=\"title\"\n            label=\"Title\"\n          ></v-text-field>\n          \n        </v-list-item-content>\n      \n      </v-list-item>\n    <v-list-item>\n      <v-list-item-content>\n        <input class=\"fileInput\" type=\"file\" name=\"file\" @change=\"onFileUpdate\">\n      </v-list-item-content>\n    </v-list-item>\n    \n    <v-list-item>\n      <v-list-item-content>\n        <v-card-actions>\n          <v-btn \n          class=\"button\"\n          type=\"submit\"\n          v-on:click.prevent=\"uploadFiles\"\n          :loading=\"loading\"\n          >Upload</v-btn>\n        </v-card-actions>\n      </v-list-item-content>\n    </v-list-item>\n\n    </form>\n    \n  </v-card>\n</template>\n<script>\n// import vue2Dropzone from 'vue2-dropzone'\n// import 'vue2-dropzone/dist/vue2Dropzone.min.css'\nimport Vue from 'vue';\nimport FileUpload from 'v-file-upload';\nimport vue2Dropzone from 'vue2-dropzone';\nimport 'vue2-dropzone/dist/vue2Dropzone.min.css'\n\nimport { ImageProvider, ItemProvider } from '../providers';\nVue.use(FileUpload);\nVue.use(vue2Dropzone);\nexport default {\n    components: {\n    },\n    data: function() {\n        return {\n          url: 'http://localhost:3000/image/upload',\n          headers: {},\n          filesUploaded: [],\n          title: \"\",\n          fileExtension: \"\",\n          loading: false,\n          file: {},\n        };\n    },\n    methods: {\n      thumbUrl: function(file) {\n        return file.myThumbUrlProperty\n      },\n      onFileUpdate: function(file) {\n        this.$data.filesUploaded = file.target.files[0];\n        this.$data.title = file.target.files[0].name.split('.')[0];\n        this.$data.fileExtension = file.target.files[0].name.split('.')[1];\n        \n      },\n      uploadFiles: function() {\n        // this.$data.loading = true;\n        // emit event to reload the imageOrganizer once the image is uploaded\n        // set loading until the upload is done...\n        \n        let file = this.$data.filesUploaded;\n        let title = this.$data.title;\n        let extension = this.$data.fileExtension;\n        let contentType = '';\n        if (extension.includes('jpeg') || extension.includes('jpg')) {\n          contentType = 'image/jpeg';\n        } else if (extension.includes('png')) { \n          contentType = 'image/png';\n        } else if (extension.includes('gif')) {\n          contentType = 'image/gif';\n        }\n        var reader = new FileReader();\n        reader.onloadend = function(e) {\n          // save this data1111 and send to server\n          let data1111 = e.target.result // reader.result // ----------------- data1111\n          const imageProvider = new ImageProvider();\n          let body = {\n            file: data1111,\n            title: title,\n            contentType: contentType,\n          };\n          imageProvider.uploadImage(body).then(function(response) {\n            let itemProvider = new ItemProvider();\n            itemProvider.createItem({\n              title: title,\n              url: response.Location,\n            });\n          });\n        };\n        reader.readAsBinaryString(file);\n      },\n      mounted: function() {\n        \n      }\n    }\n}\n</script>\n<style scoped>\n.title {\n  text-align: center;\n}\n\n.button {\n  text-align: center;\n  margin-left: 35%;\n}\n\n.form {\n  text-align: center;\n}\n\n.fileInput {\n  margin-left: 15%;\n}\n.titleField {\n  margin-left: 10%;\n  margin-right: 10%;\n}\n</style>\n"],"sourceRoot":"src/components"}]}